# Generated by Selenium IDE
import pytest
import time
import json
import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from django.test import LiveServerTestCase

class TestTestuicatalogo(LiveServerTestCase):
  @classmethod
  def setUpClass(cls):
        super().setUpClass()
        chrome_options = Options()
        chrome_options.add_argument("--disable-cache")
        chrome_options.add_argument("--disable-application-cache")
        chrome_options.add_argument("--disable-offline-load-stale-cache")
        chrome_options.add_argument("--disk-cache-size=0")
        cls.driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=chrome_options)
        cls.driver.implicitly_wait(10)

  @classmethod
  def tearDownClass(cls):
        cls.driver.quit()
        super().tearDownClass()

  
  def test_testcompra(self):
    self.driver.get("http://127.0.0.1:8000/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.LINK_TEXT, "Cat√°logo").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-item:nth-child(2) button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-item:nth-child(3) button").click()
    self.driver.find_element(By.LINK_TEXT, "Ver cesta").click()
    self.driver.find_element(By.LINK_TEXT, "Realizar Pedido").click()
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("example@example.com")
    self.driver.find_element(By.ID, "direccion").click()
    self.driver.find_element(By.ID, "direccion").send_keys("Calle Picasso")
    self.driver.find_element(By.ID, "metodo_pago").click()
    dropdown = self.driver.find_element(By.ID, "metodo_pago")
    dropdown.find_element(By.XPATH, "//option[. = 'Contra Reembolso']").click()
    self.driver.find_element(By.ID, "submit-button").click()
    self.driver.find_element(By.LINK_TEXT, "Rastrear Pedido").click()
    self.driver.find_element(By.ID, "pedido_id").click()
    self.driver.find_element(By.ID, "pedido_id").send_keys("2")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.find_element(By.ID, "pedido_id").click()
    self.driver.find_element(By.ID, "pedido_id").send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
  
if __name__ == '__main__':
    unittest.main()