# Generated by Selenium IDE
import pytest
import time
import json
import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from django.test import LiveServerTestCase

class TestTestuicatalogo(LiveServerTestCase):
  @classmethod
  def setUpClass(cls):
        super().setUpClass()
        chrome_options = Options()
        chrome_options.add_argument("--disable-cache")
        chrome_options.add_argument("--disable-application-cache")
        chrome_options.add_argument("--disable-offline-load-stale-cache")
        chrome_options.add_argument("--disk-cache-size=0")
        cls.driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=chrome_options)
        cls.driver.implicitly_wait(10)

  @classmethod
  def tearDownClass(cls):
        cls.driver.quit()
        super().tearDownClass()

  def test_testadmin(self):
    self.driver.get("http://127.0.0.1:8000/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.LINK_TEXT, "Login").click()
    self.driver.find_element(By.ID, "id_username").click()
    self.driver.find_element(By.ID, "id_username").send_keys("officepack@gmail.com")
    self.driver.find_element(By.CSS_SELECTOR, "form").click()
    self.driver.find_element(By.ID, "id_password").click()
    self.driver.find_element(By.ID, "id_password").send_keys("4dm1n")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.find_element(By.LINK_TEXT, "Gestionar Productos").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-item:nth-child(2) .gestionar_productos > button").click()
    self.driver.find_element(By.ID, "id_nombre").click()
    self.driver.find_element(By.ID, "id_nombre").click()
    self.driver.find_element(By.ID, "id_nombre").send_keys("LÃ¡mpara escritorio LED")
    self.driver.find_element(By.ID, "id_cantidad_almacen").send_keys("66")
    self.driver.find_element(By.ID, "id_cantidad_almacen").click()
    self.driver.find_element(By.ID, "id_cantidad_almacen").send_keys("65")
    self.driver.find_element(By.ID, "id_cantidad_almacen").click()
    element = self.driver.find_element(By.ID, "id_cantidad_almacen")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-item:nth-child(3) form:nth-child(2) > button").click()
    self.driver.find_element(By.CSS_SELECTOR, "header").click()
    self.driver.find_element(By.LINK_TEXT, "Gestionar Pedidos").click()
    self.driver.find_element(By.LINK_TEXT, "Gestionar Usuarios").click()
    self.driver.find_element(By.CSS_SELECTOR, ".pedido-item:nth-child(5) > form:nth-child(2) > button").click()
    self.driver.find_element(By.LINK_TEXT, "Perfil").click()
    self.driver.find_element(By.CSS_SELECTOR, "header").click()
    self.driver.find_element(By.LINK_TEXT, "Logout").click()
  
if __name__ == '__main__':
    unittest.main()