# Generated by Selenium IDE
import pytest
import time
import json
import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from django.test import LiveServerTestCase

class TestTestuicatalogo(LiveServerTestCase):
  @classmethod
  def setUpClass(cls):
        super().setUpClass()
        chrome_options = Options()
        chrome_options.add_argument("--disable-cache")
        chrome_options.add_argument("--disable-application-cache")
        chrome_options.add_argument("--disable-offline-load-stale-cache")
        chrome_options.add_argument("--disk-cache-size=0")
        cls.driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=chrome_options)
        cls.driver.implicitly_wait(10)

  @classmethod
  def tearDownClass(cls):
        cls.driver.quit()
        super().tearDownClass()

  
  def test_testuicatalogo(self):
    self.driver.get("http://127.0.0.1:8000/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.LINK_TEXT, "Catálogo").click()
    self.driver.find_element(By.NAME, "nombre").click()
    self.driver.find_element(By.NAME, "nombre").send_keys("silla")
    self.driver.find_element(By.CSS_SELECTOR, ".search-button:nth-child(3)").click()
    self.driver.find_element(By.NAME, "nombre").click()
    self.driver.find_element(By.NAME, "nombre").send_keys("mesa")
    self.driver.find_element(By.NAME, "nombre").send_keys(Keys.ENTER)
    self.driver.find_element(By.NAME, "fabricante").click()
    dropdown = self.driver.find_element(By.NAME, "fabricante")
    dropdown.find_element(By.XPATH, "//option[. = 'LuzVintage']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".search-button:nth-child(3)").click()
    self.driver.find_element(By.NAME, "material").click()
    dropdown = self.driver.find_element(By.NAME, "material")
    dropdown.find_element(By.XPATH, "//option[. = 'Metal']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".search-button:nth-child(3)").click()
    self.driver.find_element(By.NAME, "tipo").click()
    dropdown = self.driver.find_element(By.NAME, "tipo")
    dropdown.find_element(By.XPATH, "//option[. = 'Decoración']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".search-button:nth-child(3)").click()
    self.driver.find_element(By.NAME, "tipo").click()
    dropdown = self.driver.find_element(By.NAME, "tipo")
    dropdown.find_element(By.XPATH, "//option[. = 'Electronico']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".search-button:nth-child(3)").click()
    self.driver.find_element(By.LINK_TEXT, "Cesta").click()
    self.driver.find_element(By.CSS_SELECTOR, "nav").click()
    self.driver.find_element(By.LINK_TEXT, "Catálogo").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-item:nth-child(1) button").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-item:nth-child(2) button").click()
    self.driver.find_element(By.CSS_SELECTOR, "header").click()
    self.driver.find_element(By.LINK_TEXT, "Cesta").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .cart-form:nth-child(1) > .cart-button").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .cart-form:nth-child(1) > .cart-button").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .cart-form:nth-child(2) > .cart-button").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .cart-form:nth-child(2) > .cart-button").click()
    self.driver.find_element(By.LINK_TEXT, "Home").click()
  
if __name__ == '__main__':
    unittest.main()